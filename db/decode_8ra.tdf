--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Stratix IV" LPM_DECODES=16 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 13.1 cbx_cycloneii 2013:10:23:18:05:48:SJ cbx_lpm_add_sub 2013:10:23:18:05:48:SJ cbx_lpm_compare 2013:10:23:18:05:48:SJ cbx_lpm_decode 2013:10:23:18:05:48:SJ cbx_mgl 2013:10:23:18:06:54:SJ cbx_stratix 2013:10:23:18:05:48:SJ cbx_stratixii 2013:10:23:18:05:48:SJ  VERSION_END


-- Copyright (C) 1991-2013 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_8ra
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[15..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[15..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode4172w[1..0]	: WIRE;
	w_anode4181w[3..0]	: WIRE;
	w_anode4198w[3..0]	: WIRE;
	w_anode4208w[3..0]	: WIRE;
	w_anode4218w[3..0]	: WIRE;
	w_anode4228w[3..0]	: WIRE;
	w_anode4238w[3..0]	: WIRE;
	w_anode4248w[3..0]	: WIRE;
	w_anode4258w[3..0]	: WIRE;
	w_anode4270w[1..0]	: WIRE;
	w_anode4277w[3..0]	: WIRE;
	w_anode4288w[3..0]	: WIRE;
	w_anode4298w[3..0]	: WIRE;
	w_anode4308w[3..0]	: WIRE;
	w_anode4318w[3..0]	: WIRE;
	w_anode4328w[3..0]	: WIRE;
	w_anode4338w[3..0]	: WIRE;
	w_anode4348w[3..0]	: WIRE;
	w_data4170w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[15..0] = eq_wire[15..0];
	eq_wire[] = ( ( w_anode4348w[3..3], w_anode4338w[3..3], w_anode4328w[3..3], w_anode4318w[3..3], w_anode4308w[3..3], w_anode4298w[3..3], w_anode4288w[3..3], w_anode4277w[3..3]), ( w_anode4258w[3..3], w_anode4248w[3..3], w_anode4238w[3..3], w_anode4228w[3..3], w_anode4218w[3..3], w_anode4208w[3..3], w_anode4198w[3..3], w_anode4181w[3..3]));
	w_anode4172w[] = ( (w_anode4172w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode4181w[] = ( (w_anode4181w[2..2] & (! w_data4170w[2..2])), (w_anode4181w[1..1] & (! w_data4170w[1..1])), (w_anode4181w[0..0] & (! w_data4170w[0..0])), w_anode4172w[1..1]);
	w_anode4198w[] = ( (w_anode4198w[2..2] & (! w_data4170w[2..2])), (w_anode4198w[1..1] & (! w_data4170w[1..1])), (w_anode4198w[0..0] & w_data4170w[0..0]), w_anode4172w[1..1]);
	w_anode4208w[] = ( (w_anode4208w[2..2] & (! w_data4170w[2..2])), (w_anode4208w[1..1] & w_data4170w[1..1]), (w_anode4208w[0..0] & (! w_data4170w[0..0])), w_anode4172w[1..1]);
	w_anode4218w[] = ( (w_anode4218w[2..2] & (! w_data4170w[2..2])), (w_anode4218w[1..1] & w_data4170w[1..1]), (w_anode4218w[0..0] & w_data4170w[0..0]), w_anode4172w[1..1]);
	w_anode4228w[] = ( (w_anode4228w[2..2] & w_data4170w[2..2]), (w_anode4228w[1..1] & (! w_data4170w[1..1])), (w_anode4228w[0..0] & (! w_data4170w[0..0])), w_anode4172w[1..1]);
	w_anode4238w[] = ( (w_anode4238w[2..2] & w_data4170w[2..2]), (w_anode4238w[1..1] & (! w_data4170w[1..1])), (w_anode4238w[0..0] & w_data4170w[0..0]), w_anode4172w[1..1]);
	w_anode4248w[] = ( (w_anode4248w[2..2] & w_data4170w[2..2]), (w_anode4248w[1..1] & w_data4170w[1..1]), (w_anode4248w[0..0] & (! w_data4170w[0..0])), w_anode4172w[1..1]);
	w_anode4258w[] = ( (w_anode4258w[2..2] & w_data4170w[2..2]), (w_anode4258w[1..1] & w_data4170w[1..1]), (w_anode4258w[0..0] & w_data4170w[0..0]), w_anode4172w[1..1]);
	w_anode4270w[] = ( (w_anode4270w[0..0] & data_wire[3..3]), enable_wire);
	w_anode4277w[] = ( (w_anode4277w[2..2] & (! w_data4170w[2..2])), (w_anode4277w[1..1] & (! w_data4170w[1..1])), (w_anode4277w[0..0] & (! w_data4170w[0..0])), w_anode4270w[1..1]);
	w_anode4288w[] = ( (w_anode4288w[2..2] & (! w_data4170w[2..2])), (w_anode4288w[1..1] & (! w_data4170w[1..1])), (w_anode4288w[0..0] & w_data4170w[0..0]), w_anode4270w[1..1]);
	w_anode4298w[] = ( (w_anode4298w[2..2] & (! w_data4170w[2..2])), (w_anode4298w[1..1] & w_data4170w[1..1]), (w_anode4298w[0..0] & (! w_data4170w[0..0])), w_anode4270w[1..1]);
	w_anode4308w[] = ( (w_anode4308w[2..2] & (! w_data4170w[2..2])), (w_anode4308w[1..1] & w_data4170w[1..1]), (w_anode4308w[0..0] & w_data4170w[0..0]), w_anode4270w[1..1]);
	w_anode4318w[] = ( (w_anode4318w[2..2] & w_data4170w[2..2]), (w_anode4318w[1..1] & (! w_data4170w[1..1])), (w_anode4318w[0..0] & (! w_data4170w[0..0])), w_anode4270w[1..1]);
	w_anode4328w[] = ( (w_anode4328w[2..2] & w_data4170w[2..2]), (w_anode4328w[1..1] & (! w_data4170w[1..1])), (w_anode4328w[0..0] & w_data4170w[0..0]), w_anode4270w[1..1]);
	w_anode4338w[] = ( (w_anode4338w[2..2] & w_data4170w[2..2]), (w_anode4338w[1..1] & w_data4170w[1..1]), (w_anode4338w[0..0] & (! w_data4170w[0..0])), w_anode4270w[1..1]);
	w_anode4348w[] = ( (w_anode4348w[2..2] & w_data4170w[2..2]), (w_anode4348w[1..1] & w_data4170w[1..1]), (w_anode4348w[0..0] & w_data4170w[0..0]), w_anode4270w[1..1]);
	w_data4170w[2..0] = data_wire[2..0];
END;
--VALID FILE
